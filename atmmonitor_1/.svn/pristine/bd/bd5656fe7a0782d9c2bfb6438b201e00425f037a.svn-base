
$(function(){
	$.ajax({
		  type: 'POST',
		  url: $ctx+"/equipmentstatis/initDeptEquipmentResultChart.action",
		  success: function(data,status){
			    initDeptEquipmentResultChart(data);
			    initApplyResultChart();
			  }
           ,
		  dataType: 'json'
		});
	
	


	$(".excelIcon").mouseover(function(){
		$(this).next(".excelTip").css("display","");
	});
	$(".excelIcon").mouseout(function(){
		$(this).next(".excelTip").css("display","none");
	});	
});

function initDeptEquipmentResultChart(data){

var dom = document.getElementById("container");
var myChart = echarts.init(dom);
myChart.clear();
myChart.showLoading({
    text: '正在努力的读取数据中...',    
});

myChart.hideLoading();
option = null;

option = {
	    title : {
	        text: '',
	        
	        x:'center'
	    },
	    tooltip : {
	        trigger: 'item',
	        formatter: "{a} <br/>{b} : {c} ({d}%)"
	    },
	    legend: {
	        orient : 'vertical',
	        x : 'left',
	        data:data["deptList"]
	    },
	    toolbox: {
	        show : true,
	        feature : {
	            mark : {show: true},
	            dataView : {show: true, readOnly: false},
	            magicType : {
	                show: true, 
	                type: ['pie', 'funnel'],
	                option: {
	                    funnel: {
	                        x: '25%',
	                        width: '50%',
	                        funnelAlign: 'left',
	                        max: 1548
	                    }
	                }
	            },
	            restore : {show: true},
	            saveAsImage : {show: true}
	        }
	    },
	    calculable : true,
	    series : [
	        {
	            name:'部门设备比例',
	            type:'pie',
	            radius : '55%',
	            center: ['50%', '60%'],
	            data:data["deptEquipValueList"]
	        }
	    ]
	};
                

	if (option && typeof option === "object") {
		//alert(1);
	    var startTime = +new Date();
	    myChart.setOption(option);
	    var endTime = +new Date();
	    var updateTime = endTime - startTime;
	    //console.log("Time used:", updateTime);
	}
}

//应用开发发布统计
function initApplyResultChart(monthList,serverNumList){
	 //console.log("monthList:", monthList);
	 //console.log("publishNumList:", publishNumList1);
var dom = document.getElementById("container1");
var myChart = echarts.init(dom);
myChart.clear();
myChart.showLoading({
   text: '正在努力的读取数据中...',    
});

myChart.hideLoading();
option = null;

option = {
	    
	    tooltip : {
	        trigger: 'item',
	        formatter : function (params) {
	            var date = new Date(params.value[0]);
	            data = date.getFullYear() + '-'
	                   + (date.getMonth() + 1) + '-'
	                   + date.getDate() + ' '
	                   + date.getHours() + ':'
	                   + date.getMinutes();
	            return data + '<br/>'
	                   + params.value[1]
	                  
	        }
	    },
	    toolbox: {
	        show : true,
	        feature : {
	            mark : {show: true},
	            dataView : {show: true, readOnly: false},
	            restore : {show: true},
	            saveAsImage : {show: true}
	        }
	    },
	    dataZoom: {
	        show: true,
	        start : 70
	    },
	    legend : {
	        data : ['series1']
	    },
	    grid: {
	        y2: 80
	    },
	    xAxis : [
	        {
	            type : 'time',
	            splitNumber:10
	        }
	    ],
	    yAxis : [
	        {
	            type : 'value'
	        }
	    ],
	    series : [
	        {
	            name: 'series1',
	            type: 'line',
	            showAllSymbol: true,
	            symbolSize: function (value){
	                return Math.round(value[1]/10) + 2;
	            },
	            data: (function () {
	                var d = [];
	                var len = 0;
	                var now = new Date();
	                var value;
	                while (len++ < 200) {
	                    d.push([
	                        new Date(2014, 9, 1, 0, len * 10000),
	                        (Math.random()*30).toFixed(2) - 0
	                        //,
	                        //(Math.random()*100).toFixed(2) - 0
	                    ]);
	                }
	                return d;
	            })()
	        }
	    ]
	};

	if (option && typeof option === "object") {
		//alert(1);
	    var startTime = +new Date();
	    myChart.setOption(option);
	    var endTime = +new Date();
	    var updateTime = endTime - startTime;
	    console.log("Time used:", updateTime);
	}
}

function exportRankData(){
	var url=$ctx+"/statistics/apply/exportRankData.action";
	var form=$('<form/>',{action:url,method:"post",style:"display:none"}).appendTo("body");
	form.submit();
	
}

function exportApplyRankData(){
	var url=$ctx+"/statistics/apply/exportApplyRankData.action";
	var form=$('<form/>',{action:url,method:"post",style:"display:none"}).appendTo("body");
	form.submit();
	
}

function getDetail(book_id){
	var url=$ctx+"/tableau/digenv/digenvview.action?workbookid="+book_id;
	window.open(url);
}

function getApplyDetail(book_id){
	var httpstr = book_id.substr(0, 4);
	if(httpstr == "http"){
		 window.open(book_id);	
	} else {
		 window.open("http://"+book_id);	
	}	
}