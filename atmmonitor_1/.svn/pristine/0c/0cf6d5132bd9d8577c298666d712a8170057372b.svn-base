package com.statis.contoller;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.equipment.service.EquipmentChangeService;
import com.equipment.service.EquipmentService;
import com.usermanager.services.BsDepService;
import com.usermanager.services.BsUserRoleService;

@Controller
@RequestMapping(value = "/equipmentstatis")
public class EquipmentStatisController {

	@Autowired
	private EquipmentChangeService equipmentChangeService;
	@Autowired
	private BsDepService bsDepService;

	@Autowired
	private EquipmentService equipmentService;

	@Autowired
	private BsUserRoleService bsUserRoleService;

	private static Log logger = LogFactory.getLog(EquipmentStatisController.class);
	
	
    @RequestMapping(value = "entry.action", method = RequestMethod.GET)
    public ModelAndView entry(HttpServletRequest req,Map<String, Object> map)
    {
    	String menuId = req.getParameter("menuId");
		if (StringUtils.isNotBlank(menuId)) {
			map.put("menuId", menuId);
		}
    	ModelAndView mv = new ModelAndView("/statistics/equipment/equipmentStatistics.jsp");
        return mv;
    }


    @RequestMapping(value = "initDeptEquipmentResultChart.action", method = RequestMethod.POST)
    @ResponseBody
    public ApplyResultChartDataVO initDeptEquipmentResultChart()
    {
        logger.info("initAnalysisResultChart begin");
        ApplyResultChartDataVO applyResultChartData = new ApplyResultChartDataVO();
        List<String> deptList=new ArrayList<String>();
        
        List<DeptStatisVO> deptEquipValueList2 = equipmentService.getDeptEquipValueList();
        for (DeptStatisVO deptStatisVO : deptEquipValueList2) {
        	deptList.add(deptStatisVO.getName());
		}
        applyResultChartData.setDeptEquipValueList(deptEquipValueList2);
        applyResultChartData.setDeptList(deptList);
     
//        deptList = applyResultChartData.getDeptList();
//        //'直接访问','邮件营销','联盟广告','视频广告','搜索引擎
//        deptList.add("直接访问");
//        deptList.add("邮件营销");
//        deptList.add("联盟广告");
//        deptList.add("视频广告");
//        deptList.add("搜索引擎");
//        
//
//        List<DeptStatisVO> deptEquipValueList = applyResultChartData.getDeptEquipValueList();
//        deptEquipValueList.add(new DeptStatisVO("直接访问","335"));
//        deptEquipValueList.add(new DeptStatisVO("邮件营销","310"));
//        deptEquipValueList.add(new DeptStatisVO("联盟广告","234"));
//        deptEquipValueList.add(new DeptStatisVO("视频广告","135"));
//        deptEquipValueList.add(new DeptStatisVO("搜索引擎","158"));
        logger.info(applyResultChartData);
        return applyResultChartData;
    }

}
